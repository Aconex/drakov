# Demo Group 1

## Simple request [/demo]

### demo schema [GET]

+ Response 200 (application/json)

    + Schema
    
        ```json
            {
              "$schema": "http://json-schema.org/draft-07/schema#",
              "required": ["id"],
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                }
              }
             
            }
        ```

### Post note schema [POST]

+ Request
    + Body
    
            For validator
    
    + Schema
    
        ```json
            {
              "$schema": "http://json-schema.org/draft-07/schema#",
              "required": ["requestProp"],
              "type": "object",
              "properties": {
                "requestProp": {
                  "type": "string"
                }
              }
            }
        ```    

+ Response 200 (application/json)

    + Schema
    
        ```json
            {
              "$schema": "http://json-schema.org/draft-07/schema#",
              "required": ["id"],
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                }
              }
             
            }
        ```

### Bad Request [PUT]
+ Request
    + Body
    
            For validator
    
    + Schema
    
        ```json
            {
              "$schema": "http://json-schema.org/draft-07/schema#",
              "required": ["id"],
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                }
              }
             
            }
        ```

+ Response 200 (application/json)

    + Schema
    
        ```json
            {
              "$schema": "http://json-schema.org/draft-07/schema#",
              "required": ["id"],
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                }
              }
             
            }
        ```
## Request with path parameter as number [/demo/{pathparam}]

+ Parameters
    + pathparam (number)

### Get note by param [GET] 
+ Response 200 (application/json)

    + Schema
    
        ```json
            {
              "$schema": "http://json-schema.org/draft-07/schema#",
              "required": ["id"],
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                }
              }
             
            }
        ```
## Request with path parameter as number [/demo1/{pathparam}]

+ Parameters
    + pathparam (number)

### Get note by param [GET] 
+ Response 200 (application/json)

    + Schema
    
        ```json
            {
              "$schema": "http://json-schema.org/draft-07/schema#",
              "required": ["id"],
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                }
              }
             
            }
        ```
## Request with path parameter as number [/demo2/{pathparam}]

+ Parameters
    + pathparam (number)

### Get note by param abc [GET] 
+ Response 200 (application/json)

    + Schema
    
        ```json
            {
              "$schema": "http://json-schema.org/draft-07/schema#",
              "required": ["id"],
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                }
              }
             
            }
        ```

## Request similar with same start as another with a path param [/demo/detail]

### Get demo detail [GET] 
+ Response 200 (application/json)

    + Schema
    
        ```json
            {
              "$schema": "http://json-schema.org/draft-07/schema#",
              "required": ["id"],
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                }
              }
             
            }
        ```

## Request with query parameters [/demo?query={query}]
+ Parameters
    + query (number)
    
### GET [GET]

+ Response 200 (application/json)

    + Body

        ```json
            {
                "question": "What?",
                "choices": ["This", "That"]
            }
        ```
